安卓版本的PWA会保留你的登录状态，并且会系统级推送消息。而在苹果上，这两点都做不到。

https://www.jianshu.com/p/768be2733872

sw缓存资源虽然是异步，但是占用主线程的带宽和cpu，所以首次打开使用window.onload来注册;为啥每次都要onload

sw是有scope

假设你的sw文件放在根目录下位于/sw/sw.js路径的话，那么你的sw就只能监听/sw/*下面的请求，如果想要监听所有请求有两个办法，一个是将sw.js放在根目录下，或者是在注册是时候设置scope。

sw是由事件驱动的,具有生命周期 parsed - installing - install - activating - activated - new sw - redundant

install 事件中, 抓取资源进行缓存

activate 事件中, 遍历缓存, 清除过期的资源

fetch 事件中, 拦截请求, 查询缓存或者网络, 返回请求的资源

sw本身缓存怎么办

fetch会拦截整个浏览器的请求，意味着不同窗口的请求也会触发·

当wx.js文件改变时候，需要被请求之后才会触发install（wx为啥不能自动更新？）

窗口打开页面wx.js会chrome会提示注册删除不掉

注册的时候带有版本号，那么每次都会触发install

如果前面注册过了不一样的路径，那么如果install里面没有调用 self.skipWaiting()，不会触发activate
如果前面注册过了相同路径，那么如果install里面没有调用 self.skipWaiting()，也会触发activate

第一次没有注册过任何

如果注册在onload那么触发流程
触发流程 register - > install ->activate
如果注册不在onload里面触发
触发流程  install -> activate -> register 
why?

刷新页面每次都可以触发register，但是不会触发install

为啥第二次注册没看到fetch捕获当前页面刷新的资源？为啥跨页面的请求可以fetch，而本地的里面并没有？


这里首先执行了一个event.waitUntil函数，该函数是service worker标准提供的函数，接收一个promise参数，并且监听函数内所有的promise,只要有一个promise的结果是reject，那么这次安装就会失败。
比如说cache.addAll 时，有一个资源下载不回来

activate这个事件在第一次注册的时候会随着install触发，install第二次触发时候activate就处于等待触发，但没触发，application里面就会看到两个workerservice，
elf.skipWaiting()这个就是手动触发activate

https://blog.csdn.net/VhWfR2u02Q/article/details/84801178

https://blog.csdn.net/chuogun0812/article/details/100766104

如何再chorme中设置里面有 "安装..."

那么必须在manifest.json要有192这个尺寸的icons

